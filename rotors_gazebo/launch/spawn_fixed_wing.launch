<?xml version="1.0"?>

<launch>
  <arg name="uav_name" default="techpod"/>
  <!-- namespace在这设置 -->
  <arg name="namespace" default="$(arg uav_name)"/>
  <arg name="aero_params_yaml_file" default="$(find rotors_gazebo)/resource/fixed_wing/aero_params_$(arg uav_name).yaml"/>
  <arg name="vehicle_params_yaml_file" default="$(find rotors_gazebo)/resource/fixed_wing/$(arg uav_name).yaml"/>
  <arg name="is_input_joystick" default="false"/>
  <arg name="model" default="$(find rotors_description)/urdf/$(arg uav_name)_base.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <!-- model initial pose -->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="R" default="0.0"/>
  <arg name="P" default="0.0"/>
  <arg name="Y" default="-1.57"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="$(arg uav_name)"/>
  <arg name="wait_to_record_bag" default="false"/>
  <arg name="enable_mavlink_interface" default="false"/>

  <!-- send the robot XML to param server (change xacro.py to xacro here)-->
  <!-- both gazebo and rviz require param robot_description -->
  <!-- -i or inorder is default as of Melodic, so it's not necessary. -->
  <param name="robot_description" command="
    $(find xacro)/xacro '$(arg model)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    enable_mavlink_interface:=$(arg enable_mavlink_interface)
    log_file:=$(arg log_file)
    wait_to_record_bag:=$(arg wait_to_record_bag)
    namespace:=$(arg namespace)
    aero_params_yaml_file:=$(arg aero_params_yaml_file)
    vehicle_params_yaml_file:=$(arg vehicle_params_yaml_file)
    is_input_joystick:=$(arg is_input_joystick)"
  /><!--后面的参数传入xacro，类似launch文件-->
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_$(arg namespace)" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg R)
         -P $(arg P)
         -Y $(arg Y)
         -model $(arg namespace)"
   respawn="false" output="screen"><!--此处model就是个名字可自定义-->
  </node>
  
  <!-- rviz uses .urdf/.xacro as description and .rviz as view -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rotors_description)/rviz/techpod_model_view.rviz"/>
  <!-- publish robot state for rviz -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <!-- publish joint state for rviz -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
</launch>
